[
    {
        "title": "Show HN: Unsure Calculator \u2013 back-of-a-napkin probabilistic calculator",
        "url": "https://filiph.github.io/unsure/",
        "content": "Unsure Calculator 7 8 9 / \u232b 4 5 6 x ~ 1 2 3 - 0 . + = Write a formula and hit Enter, or press =. Calculate with numbers you\u2019re not sure about Hi, I'm Filip, and I'd like to introduce to you an early version of an uncertainty calculator. Statistics are scary, but they don't need to be. If you allow me to simplify, the field of statistics is just saying: I'm not certain about these numbers, but I would still like to reason about them. Turns out we're unsure about a lot in our lives, but we can't just throw our arms in the air and say, well, I'm not a statistician. Filip\u2019s imperfect uncertainty notation The idea is simple: apart from regular numbers (like 4, 3.14 or 43942), you can also input ranges (like 4~6, 3.1~3.2 or 40000~45000). The character between the two extremes of the range is a tilde (~), a little wave symbol. You can find it on most keyboards, but for convenience, I also included it in the keypad above. The range notation says the following to the calculator: I am not sure about the exact number here, but I am 95% sure it's somewhere in this range. That's it. I thought long and hard about this, and I got to the conclusion that simplicity is key. Yes, we could have notations for different probability distributions, for different confidence levels, for truncations, for covariance, and so on. But that would also make it harder to understand. My assumption is that, if you're already cozy enough with things like confidence levels, you'll want to use something more sophisticated anyway. Here, we're interested in unlocking the power of statistics to a broad audience. Reading the notation is easy: when you see 10~15, you say: \"ten to fifteen\". Statistics for the rest of us People short-circuit when they encounter uncertainty. \"Well, this is not certain, but that other thing also isn't, so it doesn't matter.\" It often does! \"Well, I don't know this number exactly, so I'll just pick the first number that seems plausible and calculate with that.\" Please don't! Our brains like the simplicity of single numbers, simple answers, but it's a trap. See below. A practical example This example is inspired by a true story. It is the year 2015 and our family has a dilemma. I get a chance to apply for a job in a different part of the world. My wife and I agree it would be pretty sweet to try living somewhere else for a few years, and we welcome the learning opportunity. On the other hand, we also have a new mortgage for our small flat in the city, and a one year old baby. I would like to at least know if it's a good move, financially. Will we be losing money? If so, how quickly? The problem is, nothing is certain. The company won't tell us the salary until after we go through most of the steps. I ask friends and random people on the internet about the cost of living in the area, but I get wildly different numbers. Even the tax rate isn't a simple percentage, but \"depends\". At first, I go with a simple spreadsheet calculation. I pick a reasonably conservative number for each variable and do the math. $1,500 salary, 40% tax rate, $650 rent, $150 food, $30 baby stuff, $20 transportation. 1500 * 0.6 - 650 - 150 - 30 - 20 = 50 It looks like we'll be making +$50 each month, assuming we don't spend on anything extra. On one hand, that's cool: we're not considering the move to get rich. On the other hand, it's a little scary. What if I wasn't conservative enough with some of the numbers, and we realize too late that we're bankrupting our family? I mean, it's good to know that one potential result is +$50 per month. But what about the other possible results? There's a piece of monologue in a Czech theatrical comedy that I'm quite fond of, and it goes something like this: \u201cAccording to our carbon dating analysis, this letter was written on January 21, 1842, plus-minus two thousand years.\u201d Unsure Calculator to the rescue! It seems we have quite a few values in our little formula that are actually ranges. I'm not sure about the exact value, but I am pretty sure about the general range into which each value will fall. Let's redo the calculation with ranges: 1400~1700 * 0.55~0.65 - 600~700 - 100~200 - 30 - 20 = -60~220 Now, I am 95% sure the real value of each item falls into the range. That means I am also 95% sure the real balance will fall into the -$60 to +$220 range. This is much more helpful than the one number before. For one thing, I now know that we could very well be losing money. I also have the probability distribution and the percentiles. The percentiles tell me that there's a 10% chance that our monthly balance will be -$8 or worse. (Because I see -$8 as the 10th percentile, which means that 10% of the outcomes will be lower than -$8. Conversely, 90% of the outcomes will be higher than -$8.) Now, our family can make a better informed decision. Are we willing to risk the 10% chance that we'll be losing money by this move? What about the 5% risk that we'll be losing $33 or more per month? The answer to that will depend on the family and the situation. Without a kid and a mortgage, I was way more likely to take risks than I am today. On the other hand, if we didn't have backup plans, I'd be a lot more wary of the 10% chance. In the end, we did it. And, in our case, it happened to pay back. The end. A sci-fi example This tool is meant for practical, everyday calculations. One example of such a use is in the previous section. But I can't pass by the opportunity to make an example that involves \u2026 aliens. There is a famous formula in astrophysics called the Drake equation. It is an estimate of the number of civilizations in our galaxy with which communication might be possible. For example, if we listen to radio signals from the stars, should we expect hundreds of civilizations trying to reach each other in our galaxy? Or is it more like thousands? Or zero? Is it realistic to expect we're alone here? The Drake equation is actually very simple: it's just a multiplication of 7 numbers: The original formula (written in 1961 by one Frank Drake) and its values went like this: in our galaxy, there is one star formed per year (R*), of which one fifth (fp) have about 3 planets (ne), of which 100% (fl) will eventually develop life, of which 100% (fi) will eventually become intelligent, of which 10% (fc) will be able to communicate, and will last 1 million years (L). If you put all these numbers together, you'll get to the number 60,000. There should be 60 thousand civilization at any one time, trying to communicate with each other across the galaxy. Where are they? As you might expect, there's been a lot of discussion about this equation since 1961. The estimated values for each of the parameters vary wildly between astrophysicists. So, let's get the latest estimates, and put them into ranges. This gives us the following: 1.5~3 x 0.9~1.0 x 0.1~0.4 x 0.1~1.0 x 0.1~1.0 x 0.1~0.2 x 304~10000 If we put it into the Unsure Calculator, we get this: So, we can expect anywhere between 0 and 450 civilizations. And the probability skews to the lower end (the histogram is wider towards the bottom). Note: If you're curious why there is a negative number (-5) in the histogram, that's just an inevitable downside of the simplicity of the Unsure Calculator. Without further knowledge, the calculator cannot know that a negative number is impossible (in other words, you can't have -5 civilizations, for example). Other use cases Here are some ideas of how to use this calculator and its notation. Estimate viability of a business idea, with uncertain size of the market, uncertain market share, uncertain monthly sales per person, and uncertain operational costs. For example: 50000~80000 x 0.10~0.20 x 5~10 - 20000~50000 Estimate future income with uncertain money per month, length of a gig, and tax rate. For example: 1000~1500 x 10~12 x (30~50 / 100) Estimate time saved by a dishwasher (or any other piece of technology) given uncertain number of times used per week, uncertain time saving per use, uncertain lifetime and uncertain installation costs. For example: (3~5 * 5~10 * 51 * 7~15) / 60 - 10~15 Estimate total return of an investment account. Both the interest rate and length of investing is unsure. For example: 5000 x (-2~5 / 100) x 5~10 Estimate the probability of dying in a pandemic, given an uncertain morbidity rate (how many people get sick) and mortality rate (how many infected people die). For example: (10~30 / 100) * (0.1~1.0 / 100) * 100 Estimate the height of a skyscraper, given an uncertain distance from its base, and an uncertain angle in which we see the top of it. For example: 100 x tan(70 ~ 80) Estimate return on investment of a marketing campaign, given an uncertain number of views, uncertain click through rate, uncertain conversion rate, and uncertain spend. For example: 1000000 x (2~3 / 100) x (3~5 / 100) x (10~15) Available functions In the keypad above, you will only find +, -, x and /. But the calculator supports more than that, even in this early stage. You can calculate 2~3 ^ 4 (two to three, to the power of four), sqrt(10~12) (square root of ten to twelve) or sin(90~95) (sine of ninety to ninety five degrees). Limitations This is a one man show. You should expect breakages. The formula parser is brittle and gives unhelpful error messages. The computation is quite slow. In order to stay as flexible as possible, I'm using the Monte Carlo method. Which means the calculator is running about 250K AST-based computations for every calculation you put forth. The UI is ugly, to say the least. The only way to share formulas is to manually construct a URL. For example, sending someone to https://filiph.github.io/unsure/#f=20~30 will auto-compute 20~30 for them. Range is always a normal distribution, with the lower number being two standard deviations below the mean, and the upper number two standard deviations above. Nothing fancier is possible, in terms of input probability distributions. And of course, this is not a statistician's tool. Use the Unsure Calculator for back-of-a-napkin calculations. For anything more involved, use one of the free or paid statistical tools, a full programming environment, or hire a statistician. I hope some people will find this tool useful, despite the limitations and despite its spartan design. \u2014 Filip Hracek, March 2020 P.S.: If you want to help improve this tool, or if you want to get the command-line version, go to github.com/filiph/unsure. P.P.S. (update 2025): I've been using this notation and tool for the past 5 years, and it's now an indispensable part of my workflow when starting any new project. A more recent \"notebook\" version of the app can be found here \u2014 that one is less beginner-friendly, but more helpful for \"power users\" (N=1). If you're interested in this project, you can follow me or subscribe to my mailing list (check \"software development\" as the topic you're interested in).",
        "headline": "Launch of an Uncertainty Calculator",
        "entry_sentence": "Filip Hracek has introduced an early version of an uncertainty calculator designed to simplify statistics.",
        "detail": "Users can input regular numbers or ranges to better assess uncertain financial situations, allowing for more informed decision-making.",
        "icon": "\ud83d\udfe3"
    },
    {
        "title": "TLS certificate lifetimes will officially reduce to 47 days",
        "url": "https://www.digicert.com/blog/tls-certificate-lifetimes-will-officially-reduce-to-47-days",
        "content": "Skip to main content Enable accessibility for low vision Open the accessibility menu Platform Solutions Buy Company Resources Support CONTACT US BLOG > CERTIFICATE MANAGEMENT > TLS CERTIFICATE LIFETIMES WILL OFFICIALLY REDUCE TO 47 DAYS CERTIFICATE MANAGEMENT 04-14-2025 TLS Certificate Lifetimes Will Officially Reduce to 47 Days STEPHEN DAVIDSON The CA/Browser Forum has officially voted to amend the TLS Baseline Requirements to set a schedule for shortening both the lifetime of TLS certificates and the reusability of CA-validated information in certificates. The first user impacts of the ballot take place in March 2026. The ballot was long debated in the CA/Browser Forum and went through several versions, incorporating feedback from certificate authorities and their customers. The voting period ended on April 11, 2025, closing one hotly contested chapter and allowing the certificate world to plan for what comes next. The new TLS certificate lifetime schedule The new ballot targets certificate validity of 47 days, making automation essential. Prior to this proposal by Apple, Google promoted a 90-day maximum lifetime, but they voted in favor of Apple\u2019s proposal almost immediately after the voting period began. Here\u2019s the schedule: The maximum certificate lifetime is going down: From today until March 15, 2026, the maximum lifetime for a TLS certificate is 398 days. As of March 15, 2026, the maximum lifetime for a TLS certificate will be 200 days. As of March 15, 2027, the maximum lifetime for a TLS certificate will be 100 days. As of March 15, 2029, the maximum lifetime for a TLS certificate will be 47 days. The maximum period during which domain and IP address validation information may be reused is going down: From today until March 15, 2026, the maximum period during which domain validation information may be reused is 398 days. As of March 15, 2026, the maximum period during which domain validation information may be reused is 200 days. As of March 15, 2027, the maximum period during which domain validation information may be reused is 100 days. As of March 15, 2029, the maximum period during which domain validation information may be reused is 10 days. As of March 15, 2026, validations of Subject Identity Information (SII) can only be reused for 398 days, down from 825. SII is the company name and other information found in an OV (Organization Validated) or EV (Extended Validation) certificate, i.e., everything but the domain name or IP address protected by the certificate. This does not affect DV (Domain Validated) certificates, which have no SII. Why 47 Days? 47 days might seem like an arbitrary number, but it\u2019s a simple cascade: 200 days = 6 maximal month (184 days) + 1/2 30-day month (15 days) + 1 day wiggle room 100 days = 3 maximal month (92 days) + ~1/4 30-day month (7 days) + 1 day wiggle room 47 days = 1 maximal month (31 days) + 1/2 30-day month (15 days) + 1 day wiggle room Apple\u2019s justification for the change In the ballot, Apple makes many arguments in favor of the moves, one of which is most worth calling out. They state that the CA/B Forum has been telling the world for years, by steadily shortening maximum lifetimes, that automation is essentially mandatory for effective certificate lifecycle management. The ballot argues that shorter lifetimes are necessary for many reasons, the most prominent being this: The information in certificates is becoming steadily less trustworthy over time, a problem that can only be mitigated by frequently revalidating the information. The ballot also argues that the revocation system using CRLs and OCSP is unreliable. Indeed, browsers often ignore these features. The ballot has a long section on the failings of the certificate revocation system. Shorter lifetimes mitigate the effects of using potentially revoked certificates. In 2023, CA/B Forum took this philosophy to another level by approving short-lived certificates, which expire within 7 days, and which do not require CRL or OCSP support. Clearing up confusion about the new rules Two points about the new rules are likely to cause confusion: The three years for the rule changes are 2026, 2027, and 2029, but the gap between the second set of years is two years long. As of March 15, 2029, the maximum lifetime for a TLS certificate will be 47 days, but the maximum period during which domain validation information may be reused is only 10 days. Manual revalidation will still technically be possible, but doing so would be a recipe for failure and outages. As a certificate authority, one of the most common questions we hear from customers is whether they\u2019ll be charged more to replace certificates more frequently. The answer is no. Cost is based on an annual subscription, and what we\u2019ve learned is that, once users adopt automation, they often voluntarily move to more rapid certificate replacement cycles. For this reason, and because even the 2027 changes to 100-day certificates will make manual procedures untenable, we expect rapid adoption of automation long before the 2029 changes. Apple\u2019s statement about automated certificate lifecycle management is indisputable, but it\u2019s something we\u2019ve been long preparing for. DigiCert offers multiple automation solutions through Trust Lifecycle Manager and CertCentral, including support for ACME. DigiCert\u2019s ACME allows automation of DV, OV, and EV certificates and includes support for ACME Renewal Information (ARI). Get in touch for more information on how you can make the best use of automation. The latest developments in digital trust Want to learn more about topics like certificate management, automation, and TLS/SSL? Subscribe to the DigiCert blog to ensure you never miss a story. Related Stories 47 Days: The New Certificate Lifetime Proposed by Apple Why Certificate Automation is an Absolute Must How\u2014and Why\u2014to Automate Certificate Management Featured Stories DIGITAL TRUST 12-04-2024 How Artificial Intelligence is Reshaping Digital Trust LAKSHMI HANSPAL CERTIFICATE MANAGEMENT 04-14-2025 TLS Certificate Lifetimes Will Officially Reduce to 47 Days STEPHEN DAVIDSON DATA SECURITY 04-04-2025 Why Mobile Banking Security Still Falls Short ABBY NORWOOD Subscribe to the blog SUBSCRIBE The most-trusted global provider of high-assurance TLS/SSL, PKI, IoT and signing solutions. Company About Blog Careers Events Newsroom Leadership Contact Us Case Studies My Account KnowledgeBase Documentation Support Developers CertCentral Account Quick Links Partner Directory All Products Tools Site Seals Resources FAQs Media Library Professional Services What is PKI? How TLS/SSL Works What are SSL TLS & HTTPS? What is an SSL Certificate? What's the Difference Between DV, OV & EV SSL Certificates? Sites Support Vercara DNS DigiCert PQC Playground DigiCert Partner Portal QuoVadis Thawte Rapid SSL GeoTrust \u00a9 2025 DigiCert, Inc. All rights reserved. Legal Repository Audits & Certifications Terms of Use Privacy Center Accessibility Cookie Settings",
        "headline": "TLS certificate lifetimes to be reduced",
        "entry_sentence": "The CA/Browser Forum has voted to shorten TLS certificate lifetimes to a maximum of 47 days.",
        "detail": "The new rule will be phased in over the next few years, with the first changes starting in March 2026, emphasizing the need for automation in certificate management.",
        "icon": "\ud83d\udfe3"
    },
    {
        "title": "Kermit: A typeface for kids",
        "url": "https://microsoft.design/articles/introducing-kermit-a-typeface-for-kids/",
        "content": "We use optional cookies to improve your experience on our websites, such as through social media connections, and to display personalized advertising based on your online activity. If you reject optional cookies, only cookies necessary to provide you the services will be used. You may change your selection by clicking \u201cManage Cookies\u201d at the bottom of the page. Privacy Statement Third-Party Cookies Accept Reject Manage cookies Skip to content Design News & Stories Wallpapers Culture & Careers Resources Reading progress: VISUAL DESIGN \u2013 UX RESEARCH Introducing Kermit: A typeface for kids Using design to empower children by making reading easier, improving comprehension, and helping dyslexics. By Rob McKaughan Apr 8, 2025 \u2013 The estimated reading time is 15 min. Imagine having never ridden a broom with the chosen one they call Harry Potter, or stumbled through a closet and into the mystical land of Narnia. For kids that discover the magic of reading through books like Harry Potter or The Chronicles of Narnia, reading is a gateway to otherworldly realms where your only limitation is your imagination. But, reading isn\u2019t easy for everyone. It\u2019s estimated that 1 in 10 people have some form of dyslexia, often undiagnosed. Children with dyslexia struggle with simple reading tasks like sounding out words, making it difficult for them to read. To help young readers of all skill levels, we\u2019re introducing Kermit, a child-friendly typeface created by the type design studio Underware. Kermit is a friendly and approachable font that encourages children of all skill levels to read, even if they are anxious about their abilities. It is a powerful example of just how much design decisions matter: Associating boldness and letter widths with verbal inflections could improve a child\u2019s comprehension, or employing Variable Fonts for animation may help severe dyslexics start their reading journey. Combining science and design creativity can improve a child\u2019s confidence in reading, changing their trajectory in life. Kermit is, therefore, more than just a typeface, it is a platform for exploring new, science-based methods of helping children read. Learning to read is difficult: the process involves nearly every part of your brain, and you have to train for years to do it effortlessly. For some people, though, reading can be like navigating a confusing highway filled with detours. Children who struggle to read often have low self-esteem and give up, limiting their creative potential and intellectual curiosity. Any help we can give children can be huge \u2013 even if it\u2019s simply making words look more friendly. Designing for early readers Ever had your mood lifted, your burdens lightened, and your confidence boosted by someone\u2019s encouraging words, or a stranger\u2019s smile? We\u2019ve all experienced that boost and science proves it. Being in a good mood improves our performance on creative cognitive tasks. For Underware designers Bas Jacobs, Akiem Helmling, and Sami Kortem\u00e4ki, making Kermit fun and playful was a way to put kids in a good mood, making them interested in reading. Therefore, the design had to be informal and relatable like handwriting. A sampling of Kermit\u2019s 42 styles. Kermit was designed for children to easily read, making legibility a priority. Underware imbued Kermit with a large x-height, thick strokes, generous spacing, and familiar letter shapes, striking a perfect balance between the informality of handwriting fonts and the structure and readability of classic book typefaces like Garamond or Avenir. Making Kermit enjoyable\u2014and with support for 426 languages based on Latin, Greek, and Cyrillic alphabets\u2014is good but we wanted to do more by trying new ideas coming out of the scientific community. Take a look at the online specimen site for more details on Kermit\u2019s design. Showing how to read expressively Remember when you were a kid having to clean your room, mow the lawn, or maybe take out the garbage? You probably heard your parent or guardian ask one of the following questions: Did you take out the garbage? Did you take out the garbage? Did you take out the garbage? All three questions use the same words, yet they have different meanings. When we speak, we inflect our voice to add more meaning. You might make your voice louder, or pronounce a word slowly, or raise your pitch. These inflections are called prosody. Unfortunately, almost all prosody gets lost when we write because we have no notation for it. Ever had an email misunderstanding because people couldn\u2019t tell you were being ironic? That confusion doesn\u2019t happen as much in conversation because prosody makes the irony clear. Researcher Ann Bessemans wondered if there was a way to represent prosody in written text. She found that when you represent pitch, volume, and duration typographically, children read out loud more expressively, with correct prosody. She also found that it even worked for children and adults who had hearing impairments. Even better, a preliminary, yet unpublished study is finding that adding prosody to text improves children\u2019s comprehension. Inspired by the possibility of helping kids read expressively and improve their comprehension, we designed Kermit to represent prosody: employing boldness to represent volume, width to represent duration, and shifts letters vertically to represent pitch. It looks unconventional, but once you get used to it, it\u2019s easy to read text and hear all the nuance that a performer would add. An example of using typography to express the vocal inflections of language, with width representing duration, boldness for volume, and height for pitch. Great oratory is very expressive. When we caption videos such as President John F. Kennedy\u2019s inaugural speech using conventional text, all his passion is lost in translation. Adding prosody to the captions enables you to experience the full power of the performance\u2014even if you have a hearing impairment and can\u2019t hear a single word. A demonstration of how a speaker\u2019s expressiveness is lost with normal subtitles, but retained with typographic prosody. While we haven\u2019t implemented automatic prosody yet, Kermit allows us to explore expressive writing to elevate comprehension for children and adults alike. Helping severe dyslexics Dyslexia is a very active area of research. Fifty years ago, people thought dyslexics saw letters backwards. Now, it\u2019s primarily seen as a phonological problem in which dyslexics have difficulty with sounds in language. The most successful dyslexia programs to date focus on teaching phonemic awareness (e.g. that the spoken word \u201ccat\u201d has three sounds) and phonics (mapping letters to sounds). This success might make it seem like dyslexia is all about sounds, but it\u2019s not clear yet if phonological problems are dyslexia\u2019s cause. In 2010, researchers Trichur Vidyasagar and Kristen Pammer suggested a new theory on the cause of dyslexia: dyslexic brains might have issues with visuo-spatial processing. In other words, dyslexic brains may process visual information differently, making the order of letters unclear and reading difficult. To understand this, let\u2019s take a trip inside your brain. Light enters your eyes and shines on the retina. The retina processes the light, sending neural signals on a long journey from your eyes to the back of your head where your brain processes images, forwarding them through the visual cortex. This journey takes two parallel paths: the high road and the low road, literally. The high road, or dorsal pathway, physically runs along the top path through your brain, carrying information about where things are, such as the sky is up, pavement is down, or the order of letters on a page. It is the \u201cwhere\u201d signal. The low road, or ventral pathway, runs below the high road, carrying information about what objects are, e.g. the blue thing is the sky, the grey thing, pavement, and the two lines leaning against each other with a crossbar is an A. It is the \u201cwhat\u201d signal. These two roads meet at a little neural town called the Visual Wordform Area, which combines the \u201cwhat\u201d and \u201cwhere\u201d signals to form words\u2014hence the name. This is where we recognize words. This neural town has a big spotlight in it, controlled partially by signals from the high road. As we read, the spotlight should smoothly move from one letter to the next, focusing our attention on a letter from the low road, identifying it, then moving to the next. If anything goes wrong along the high road\u2014and there are many things that can go wrong\u2014the spotlight will not move smoothly or focus attention as well, disrupting reading. According to Vidyasagar & Pammer\u2019s theory, dyslexics may have something wrong in their high road, weakening signals about letter locations. That in turn makes it hard to understand the order that letters are coming in on the low road, making it more challenging to recognize words. This smooth spotlight movement is something we have to learn. Before we learn to read, our eyes and attention unconsciously flit about, painting a picture of our world. The more we read, the more we train our brain to control our spotlight smoothly. But, if a child can\u2019t recognize words due to weak high road signals, they won\u2019t read as much. The neurological systems needed for proficient reading won\u2019t get exercised, but they will get exercised in neurotypical classmates who read more. The dyslexic child gets left behind. When these systems are underdeveloped, a child may not develop strong phonological associations or smooth visual scanning (remember, our eyes and brains have to be trained to do this; it isn\u2019t natural). The number of potential issues along the high road might explain the variety of dyslexia subtypes. So, what does all of this have to do with a font? The high road doesn\u2019t just carry location information; it carries motion signals, too. Adding motion to letters might boost the high road signal, helping dyslexics get control of their spotlight of attention and improve their reading. To help, we created a special version of Kermit that is animated, with letters that draw themselves. A font that draws itself How do you create an animated font? Because Kermit is built as a Variable Font, it is not limited to Light, Regular, or Bold styles. It can produce any level of boldness thanks to Variable Font technology. Variable fonts can produce an infinite variety of typographic weights and widths, as shown here. But the technology isn\u2019t just for typography. It can vary in color, style, or even change a letter\u2019s shape over time, making the font animated. The math behind Variable Fonts, called linear interpolation, makes animation awkward because points on the letter\u2019s outline must move in a straight line at a constant speed. Natural-looking animation through curves needs to use a higher order of mathematics. Powered by Scribomat.com and HOIVG An animation showing the advantage of HOI interpolation versus linear interpolation. Press play to show the animation or use the slider to control it yourself. As a workaround, you could move points along many tiny lines so they seem to flow around a curve naturally. That, however, would require designers to draw dozens of versions of each letter like cartoon animators of the 1930\u2019s\u20131970\u2019s, painstakingly drawing 24 pictures for every second of film. Luckily, Kermit\u2019s designers had a clever mathematical idea: to combine independent linear parts of a Variable Font to create higher order math. They call it Higher Order Interpolation, or HOI for short. (Fun fact: In the Netherlands, where Underware is based, \u201cHoi\u201d means \u201cHi\u201d). That breakthrough enabled the designers to create smooth animations that accelerate, decelerate, and turn corners with the control of an old school animator, without having to draw thousands of pictures. This makes Kermit\u2019s animation feel like it\u2019s naturally drawing itself with a pen. Powered by Scribomat.com and HOIVG An animation showing how Kermit can draw itself smoothly using HOI and variable font technologies. Press play to start the animation or use the slider to control it yourself. We hope this animation will strengthen the high road signal in dyslexics, helping them better understand letter order and more easily recognize words. That could enable them to spend more time reading and training the neural pathways for reading. We are still testing this idea and will release the animated version only when we can scientifically prove its benefits. Empowering children Writing systems, which are over 5,500 years old, are one of humanity\u2019s greatest inventions. Like magic or telepathy, they transmit ideas and creativity across the globe and across generations. It is one of the ways that we express our humanity. Now, it\u2019s time for an upgrade. Time to take advantage of our latest technologies and research to empower more children to read. In designing a child-centric font for reading, we hope to support children learning to read while also making it more enjoyable, valuable, and accessible for everyone to read. We explore new frontiers with the animated version of Kermit, new methods of research-based expressiveness, and new ways of making reading look fun and easy to all kids, regardless of reading skill. The power of reading sets a child\u2019s imagination on fire, and no movie or technology can surpass the theater of the mind. Reading gives children agency and, ultimately, confidence. It impacts the trajectory of their lives, from their academic performance across subjects, to future job prospects, to their self-image and whether or not they feel incompetent or capable. Every child deserves the opportunity to thrive, and we are dedicated to trying ideas new and old to help them. We hope that this first release of Kermit is the next step on that journey. The basic styles of Kermit (Regular, Bold, Italic, and Bold Italic) are available today in Office, with the remaining 38 styles arriving in early May. If you want to try out the font online in the meantime, you can go to the demo site at Kermit-font.com. Read more To stay in the know with Microsoft Design, follow us on Twitter and Instagram, or join our Windows or Office Insider program. And if you are interested in working with us at Microsoft, head over to aka.ms/DesignCareers. UX RESEARCH \u2013 PROFILES Windows UX in an AI-driven world Emma Nestvold, a UX designer on the Windows design team, shares insights into her approach to design and experiences working on AI-driven features UX/UI \u2013 UX RESEARCH UX design for agents Microsoft principles and guidelines for building agentic experiences VISUAL DESIGN \u2013 DESIGN THINKING Weaving the strange: The art and alchemy of Xbox\u2019s South of Midnight Exploring the art, worldbuilding, and folklore-inspired design process Fluent Design Inclusive Design Contact Privacy Consumer Health Privacy Terms Trademarks \u00a9 Microsoft 2025 This site runs Microsoft Clarity for behavioral insights. By using this site, you consent to the collection and use of your data, such as how you interact with this website, by Microsoft for product improvements. Learn more here and at our Privacy Statement.",
        "headline": "Introducing Kermit: A Typeface for Children",
        "entry_sentence": "A new typeface called Kermit has been created to help children read more easily.",
        "detail": "Designed with features to support children with dyslexia, Kermit focuses on legibility and fun, aiming to boost young readers' confidence and engagement.",
        "icon": "\ud83d\udfe3"
    }
]